package controller;

import java.io.BufferedReader;
import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.simple.parser.JSONParser;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import service.CommentService;
import service.CommentServiceImpl;

@WebServlet("/cmt/*")
public class CommentController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private static final Logger log = LoggerFactory.getLogger(CommentController.class);
	//동기 통신이 아닌 비동기 통신(데이터만 요청한 곳으로 보내는 방식)
	//RequestDispatcher / destPage가 필요 없음. 
	private CommentService csv;
	
    public CommentController() {
        csv = new CommentServiceImpl();
    }

	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// 실제 처리가 이루어지는 메서드
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		
		//setContentType 은 설정할 필요 없음. = 동기에서 설정
		String uri = request.getRequestURI(); // /cmt/insert 
		String path = uri.substring(uri.lastIndexOf("/")+1);
		log.info(">>> cmt path > {}", path);
		
		switch(path) {
		case "post":
			try {
				//js에서 보낸 데이터를 읽어들이는 작업
				//js('Object') => controller(String) => CommentVO로 변환
				//{"bno": "5", "writer": "111", "content": "1111111111"}
				StringBuffer sb = new StringBuffer();
				String line = "";
				BufferedReader br = request.getReader();	// request의 body값을 전송
				while((line = br.readLine()) !=null) {
					sb.append(line);
				}
				log.info(">>>> sb > {}", sb.toString());
				
				//CommentVO 객체로 생성
				JSONParser parser = new JSONParser();
				JSONObject jsonObj = parser.parse(sb.toString())

			} catch (Exception e) {
				log.info("comment post error!!");
				e.printStackTrace();
			}
			break;
		}
		
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// service 에서 처리
		service(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// service 에서 처리
		service(request, response);
	}

}
